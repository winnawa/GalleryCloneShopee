{"ast":null,"code":"import { invariant } from 'ts-invariant';\nexport function toPromise(observable) {\n  var completed = false;\n  return new Promise(function (resolve, reject) {\n    observable.subscribe({\n      next: function (data) {\n        if (completed) {\n          process.env.NODE_ENV === \"production\" || invariant.warn(\"Promise Wrapper does not support multiple results from Observable\");\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject\n    });\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,cAA1B;AAIA,OAAM,SAAUC,SAAV,CAAuBC,UAAvB,EAAgD;EACpD,IAAIC,SAAS,GAAG,KAAhB;EACA,OAAO,IAAIC,OAAJ,CAAe,UAACC,OAAD,EAAUC,MAAV,EAAgB;IACpCJ,UAAU,CAACK,SAAX,CAAqB;MACnBC,IAAI,EAAE,gBAAI;QACR,IAAIL,SAAJ,EAAe;UACbM,YAAUC,QAAV,KACE,YADF,IACEV,mFADF;QAGD,CAJD,MAIO;UACLG,SAAS,GAAG,IAAZ;UACAE,OAAO,CAACM,IAAD,CAAP;QACD;MACF,CAVkB;MAWnBC,KAAK,EAAEN;IAXY,CAArB;EAaD,CAdM,CAAP;AAeD","names":["invariant","toPromise","observable","completed","Promise","resolve","reject","subscribe","next","process","NODE_ENV","data","error"],"sourceRoot":"","sources":["../../../src/link/utils/toPromise.ts"],"sourcesContent":["import { invariant } from 'ts-invariant';\n\nimport { Observable } from '../../utilities';\n\nexport function toPromise<R>(observable: Observable<R>): Promise<R> {\n  let completed = false;\n  return new Promise<R>((resolve, reject) => {\n    observable.subscribe({\n      next: data => {\n        if (completed) {\n          invariant.warn(\n            `Promise Wrapper does not support multiple results from Observable`,\n          );\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject,\n    });\n  });\n}\n"]},"metadata":{},"sourceType":"module"}