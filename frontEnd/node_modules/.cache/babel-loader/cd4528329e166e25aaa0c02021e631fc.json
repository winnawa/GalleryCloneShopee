{"ast":null,"code":"var _jsxFileName = \"/home/win/Desktop/learnReact/project2/frontEnd/src/App.js\";\n//import ApolloClient from 'apollo-boost'\n//import {ApolloProvider} from 'react-apollo'\nimport DrawList from './component/DrawList';\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink, from } from '@apollo/client';\nimport { onError } from '@apollo/client/link/error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst errorLink = onError(_ref => {\n  let {\n    graphQLErrors,\n    networkError\n  } = _ref;\n\n  if (graphQLErrors) {\n    graphQLErrors.map(_ref2 => {\n      let {\n        message,\n        location,\n        path\n      } = _ref2;\n      alert(`Graph error ${message}`);\n    });\n  }\n});\nconst link = from([errorLink, new HttpLink({\n  uri: 'http://localhost:4000/graphql'\n})]);\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link //uri : 'localhost:4000/graphql'\n\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Headers, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["DrawList","ApolloClient","InMemoryCache","ApolloProvider","HttpLink","from","onError","errorLink","graphQLErrors","networkError","map","message","location","path","alert","link","uri","client","cache","App"],"sources":["/home/win/Desktop/learnReact/project2/frontEnd/src/App.js"],"sourcesContent":["//import ApolloClient from 'apollo-boost'\n//import {ApolloProvider} from 'react-apollo'\nimport DrawList from './component/DrawList';\n\nimport {ApolloClient,InMemoryCache,ApolloProvider,HttpLink,from} from '@apollo/client'\nimport {onError} from '@apollo/client/link/error'\n\nconst errorLink= onError(({graphQLErrors, networkError})=>{\n  if (graphQLErrors){\n    graphQLErrors.map(({message,location,path})=>{\n      alert(`Graph error ${message}`)\n    })\n  }\n})\n\nconst link = from([\n  errorLink,\n  new HttpLink({uri:'http://localhost:4000/graphql'})\n])\n\nconst client = new ApolloClient({\n  cache : new InMemoryCache(),\n  link : link\n  \n  //uri : 'localhost:4000/graphql'\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n        <div className=\"App\">\n            <Headers/>\n\n            \n        </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA,OAAOA,QAAP,MAAqB,sBAArB;AAEA,SAAQC,YAAR,EAAqBC,aAArB,EAAmCC,cAAnC,EAAkDC,QAAlD,EAA2DC,IAA3D,QAAsE,gBAAtE;AACA,SAAQC,OAAR,QAAsB,2BAAtB;;AAEA,MAAMC,SAAS,GAAED,OAAO,CAAC,QAAiC;EAAA,IAAhC;IAACE,aAAD;IAAgBC;EAAhB,CAAgC;;EACxD,IAAID,aAAJ,EAAkB;IAChBA,aAAa,CAACE,GAAd,CAAkB,SAA2B;MAAA,IAA1B;QAACC,OAAD;QAASC,QAAT;QAAkBC;MAAlB,CAA0B;MAC3CC,KAAK,CAAE,eAAcH,OAAQ,EAAxB,CAAL;IACD,CAFD;EAGD;AACF,CANuB,CAAxB;AAQA,MAAMI,IAAI,GAAGV,IAAI,CAAC,CAChBE,SADgB,EAEhB,IAAIH,QAAJ,CAAa;EAACY,GAAG,EAAC;AAAL,CAAb,CAFgB,CAAD,CAAjB;AAKA,MAAMC,MAAM,GAAG,IAAIhB,YAAJ,CAAiB;EAC9BiB,KAAK,EAAG,IAAIhB,aAAJ,EADsB;EAE9Ba,IAAI,EAAGA,IAFuB,CAI9B;;AAJ8B,CAAjB,CAAf;;AAOA,SAASI,GAAT,GAAe;EACb,oBACE,QAAC,cAAD;IAAgB,MAAM,EAAEF,MAAxB;IAAA,uBACI;MAAK,SAAS,EAAC,KAAf;MAAA,uBACI,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;KAVQE,G;AAYT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}