{"ast":null,"code":"import React from 'react';\nimport { invariant } from 'ts-invariant';\nimport { getApolloContext } from \"./ApolloContext.js\";\nexport var ApolloProvider = function (_a) {\n  var client = _a.client,\n      children = _a.children;\n  var ApolloContext = getApolloContext();\n  return React.createElement(ApolloContext.Consumer, null, function (context) {\n    if (context === void 0) {\n      context = {};\n    }\n\n    if (client && context.client !== client) {\n      context = Object.assign({}, context, {\n        client: client\n      });\n    }\n\n    process.env.NODE_ENV === \"production\" ? invariant(context.client, 28) : invariant(context.client, 'ApolloProvider was not passed a client instance. Make ' + 'sure you pass in your client via the \"client\" prop.');\n    return React.createElement(ApolloContext.Provider, {\n      value: context\n    }, children);\n  });\n};","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,cAA1B;AAGA,SAASC,gBAAT,QAAiC,oBAAjC;AAOA,OAAO,IAAMC,cAAc,GAAuC,UAACC,EAAD,EAGjE;MAFCC,MAAM;MACNC,QAAQ;EAER,IAAMC,aAAa,GAAGL,gBAAgB,EAAtC;EACA,OAAOF,KACL,cADK,CACLO,aAAC,CAAaC,QADT,EACkB,IADlB,EACkB,UACpBC,OADoB,EACF;IAAjB;MAAAA;IAAiB;;IACjB,IAAIJ,MAAM,IAAII,OAAO,CAACJ,MAAR,KAAmBA,MAAjC,EAAyC;MACvCI,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,OAAlB,EAA2B;QAAEJ,MAAM;MAAR,CAA3B,CAAV;IACD;;IAEDO,YACEC,QADF,KACgB,YADhB,GAEEZ,6BAFF,GAEEA,UAAwDQ,cAAxD,EAAwD,2DACtD,qDADF,CAFF;IAMA,OACET,oBAACO,aAAa,CAACO,QAAf,EAAuB;MAACC,KAAK,EAAEN;IAAR,CAAvB,EACGH,QADH,CADF;EAKD,CAlBE,CAAP;AAqBD,CA1BM","names":["React","invariant","getApolloContext","ApolloProvider","_a","client","children","ApolloContext","Consumer","context","Object","assign","process","NODE_ENV","Provider","value"],"sourceRoot":"","sources":["../../../src/react/context/ApolloProvider.tsx"],"sourcesContent":["import React from 'react';\nimport { invariant } from 'ts-invariant';\n\nimport { ApolloClient } from '../../core';\nimport { getApolloContext } from './ApolloContext';\n\nexport interface ApolloProviderProps<TCache> {\n  client: ApolloClient<TCache>;\n  children: React.ReactNode | React.ReactNode[] | null;\n}\n\nexport const ApolloProvider: React.FC<ApolloProviderProps<any>> = ({\n  client,\n  children\n}) => {\n  const ApolloContext = getApolloContext();\n  return (\n    <ApolloContext.Consumer>\n      {(context: any = {}) => {\n        if (client && context.client !== client) {\n          context = Object.assign({}, context, { client });\n        }\n\n        invariant(\n          context.client,\n          'ApolloProvider was not passed a client instance. Make ' +\n            'sure you pass in your client via the \"client\" prop.'\n        );\n\n        return (\n          <ApolloContext.Provider value={context}>\n            {children}\n          </ApolloContext.Provider>\n        );\n      }}\n    </ApolloContext.Consumer>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}